kind: Deployment
apiVersion: apps/v1beta1
metadata:
  labels:
    app: lookerbot
  name: lookerbot
  namespace: default
spec:
  replicas: {{ k8s_replicas }}
  selector:
    matchLabels:
      app: lookerbot
  revisionHistoryLimit: 2
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
  template:
    metadata:
      labels:
        app: lookerbot
    spec:
      volumes:
      containers:
        - name: lookerbot
          image: quay.io/hearst/lookerbot:{{ tag }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 128M
          env:
            - name: AWS_ACCESS_KEY_ID
              value: "{{ aws_access_key_id }}"
            - name: AWS_SECRET_ACCESS_KEY
              value: "{{ aws_secret_access_key }}"
            - name: LOOKER_URL
              value: "{{ looker_url }}"
            - name: LOOKER_API_BASE_URL
              value: "{{ looker_api_base_url }}"
            - name: LOOKER_API_3_CLIENT_ID
              value: "{{ looker_api_3_client_id }}"
            - name: LOOKER_API_3_CLIENT_SECRET
              value: "{{ looker_api_3_client_secret }}"
            - name: LOOKER_CUSTOM_COMMAND_SPACE_ID
              value: "{{ looker_custom_command_space_id }}"
            - name: LOOKER_WEBHOOK_TOKEN
              value: "{{ looker_webhook_token }}"
            - name: PORT
              value: "{{ port }}"
            - name: SLACK_API_KEY
              value: "{{ slack_api_key }}"
            - name: SLACKBOT_S3_BUCKET
              value: "{{ slackbot_s3_bucket }}"
            - name: SLACKBOT_S3_BUCKET_REGION
              value: "{{ slackbot_s3_bucket_region }}"
            - name: SLACK_SLASH_COMMAND_TOKEN
              value: "{{ slack_slash_command_token }}"
          ports:
          - containerPort: 80
            protocol: TCP
      imagePullSecrets:
        - name: quay.io
      restartPolicy: Always
      terminationGracePeriodSeconds: 15
      dnsPolicy: "ClusterFirst"
